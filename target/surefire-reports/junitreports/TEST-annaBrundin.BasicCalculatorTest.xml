<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="ARTEMIS" failures="0" tests="20" name="annaBrundin.BasicCalculatorTest" time="0.049" errors="1" timestamp="30 Mar 2021 23:31:18 GMT">
  <testcase classname="annaBrundin.BasicCalculatorTest" name="multiplicationZeroValue2" time="0.003"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="multiplicationZeroValue1" time="0.002"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="additionPositive" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="divisionPositive" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="multiplicationPositive" time="0.002"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="addition" time="0.000"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="subtractionZeroValue2" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="multiplication" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="subtraction" time="0.002"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="division" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="additionZeroValue2" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="divisionZeroValue2" time="0.003">
    <error message="expected:&lt;Infinity&gt; but was:&lt;NaN&gt;" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected:<Infinity> but was:<NaN>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:553)
	at org.junit.Assert.assertEquals(Assert.java:683)
	at annaBrundin.BasicCalculatorTest.divisionZeroValue2(BasicCalculatorTest.java:252)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:81)
	at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:69)
	at org.testng.TestRunner$1.run(TestRunner.java:682)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1005)
	at org.testng.TestRunner.privateRunJUnit(TestRunner.java:713)
	at org.testng.TestRunner.run(TestRunner.java:614)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:128)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeLazy(TestNGDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:103)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
    </error>
  </testcase> <!-- divisionZeroValue2 -->
  <testcase classname="annaBrundin.BasicCalculatorTest" name="divisionNegative" time="0.000"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="subtractionZeroValue1" time="0.000"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="multiplicationNegative" time="0.000"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="subtractionNegative" time="0.005"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="subtractionPositive" time="0.025"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="additionZeroValue1" time="0.000"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="additionNegative" time="0.001"/>
  <testcase classname="annaBrundin.BasicCalculatorTest" name="divisionZeroValue1" time="0.000"/>
</testsuite> <!-- annaBrundin.BasicCalculatorTest -->
